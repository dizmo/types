{"version":3,"sources":["test.js"],"names":["Object","defineProperty","exports","value","chai_1","require","describe","it","expect","global","to","not","eq","undefined","uuid","bundle","throw","ReferenceError","dizmo","storage","viewer"],"mappings":"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","file":"test.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chai_1 = require(\"chai\");\nrequire(\"mocha\");\ndescribe(\"Global\", () => {\n    it(\"should exist\", () => {\n        chai_1.expect(typeof global).to.not.eq(\"undefined\");\n    });\n    it(\"should be an object\", () => {\n        chai_1.expect(typeof global).to.eq(\"object\");\n    });\n    it(\"should be referenceable\", () => {\n        chai_1.expect(global).to.not.eq(undefined);\n    });\n});\ndescribe(\"UUID\", () => {\n    const uuid = \"00000000-0000-0000-0000-000000000000\";\n    it(\"should exist\", () => {\n        chai_1.expect(typeof uuid).to.not.eq(\"undefined\");\n    });\n    it(\"should be an string\", () => {\n        chai_1.expect(typeof uuid).to.eq(\"string\");\n    });\n    it(\"should be referenceable\", () => {\n        chai_1.expect(uuid).to.not.eq(undefined);\n    });\n});\ndescribe(\"Bundle\", () => {\n    it(\"should not exist\", () => {\n        chai_1.expect(typeof bundle).to.eq(\"undefined\");\n    });\n    it(\"should not be referenceable\", () => {\n        chai_1.expect(() => bundle).to.throw(ReferenceError);\n    });\n});\ndescribe(\"Dizmo\", () => {\n    it(\"should not exist\", () => {\n        chai_1.expect(typeof dizmo).to.eq(\"undefined\");\n    });\n    it(\"should not be referenceable\", () => {\n        chai_1.expect(() => dizmo).to.throw(ReferenceError);\n    });\n});\ndescribe(\"Storage\", () => {\n    it(\"should not exist\", () => {\n        chai_1.expect(typeof storage).to.eq(\"undefined\");\n    });\n    it(\"should not be referenceable\", () => {\n        chai_1.expect(() => storage).to.throw(ReferenceError);\n    });\n});\ndescribe(\"Viewer\", () => {\n    it(\"should not exist\", () => {\n        chai_1.expect(typeof viewer).to.eq(\"undefined\");\n    });\n    it(\"should not be referenceable\", () => {\n        chai_1.expect(() => viewer).to.throw(ReferenceError);\n    });\n});\n"]}